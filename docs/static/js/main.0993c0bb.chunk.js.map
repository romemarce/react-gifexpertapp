{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cat","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2LA8BeA,EA1BY,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACZC,mBAAS,IADG,mBACzCC,EADyC,KAC7BC,EAD6B,KAgBhD,OACE,sBAAMC,SAVa,SAACC,GACpBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAc,SAACS,GAAD,OAAUP,GAAV,mBAAwBO,OACtCN,EAAc,MAMhB,SACE,uBAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAfhB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,a,+BCRdG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfC,EADe,iDACkCC,UAAUH,GAD5C,8DAEFI,MAAMF,GAFJ,cAEfG,EAFe,gBAGAA,EAAKC,OAHL,uBAGdC,EAHc,EAGdA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GACrB,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAThB,kBAcdM,GAdc,4CAAH,sDCEPO,EAAc,SAAC,GAAqB,EAAnBJ,GAAoB,IAAjBC,EAAgB,EAAhBA,MAAMV,EAAU,EAAVA,IAGrC,OACE,sBAAKc,UAAU,yCAAf,UACE,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCFGO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECHX,SAAEA,GAAe,IAAD,EAChBd,mBAAS,CACjCqB,KAAM,GACNa,SAAS,IAH+B,mBACnCC,EADmC,KAC5BC,EAD4B,KAgB1C,OAVAC,qBAAW,WACTxB,EAASC,GACRwB,MAAK,SAACC,GACHH,EAAS,CACPf,KAAMkB,EACNL,SAAS,SAGf,CAACpB,IAEIqB,EDXwBK,CAAc1B,GAAjCa,EAFyB,EAE9BN,KAAaa,EAFiB,EAEjBA,QAEpB,OACE,qCACE,oBAAIJ,UAAU,oCAAd,SAAmDhB,IACjDoB,GAAW,mBAAGJ,UAAU,mCAAb,qBACb,qBAAKA,UAAU,YAAf,SAEIH,EAAOJ,KAAK,SAAAC,GAAG,OACb,cAAC,EAAD,eAEMA,GADCA,EAAIC,aEWRgB,EAzBM,WAAM,MAGWzC,mBAAS,CAAC,gBAHrB,mBAGlB0C,EAHkB,KAGN3C,EAHM,KAKzB,OACE,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEI2C,EAAWnB,KAAK,SAAAT,GAAQ,OACtB,cAAC,EAAD,CAEEA,SAAUA,GADLA,Y,MCdnB6B,IAASC,OAAO,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.0993c0bb.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n  const [inputValue, setinputValue] = useState('');\r\n\r\n  const handleInputChange = (e) => {\r\n    setinputValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if(inputValue.trim().length > 2){\r\n      setCategories((cat) => [inputValue,...cat ]);\r\n      setinputValue('');\r\n    }\r\n    \r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input type=\"text\" value={inputValue} onChange={handleInputChange} />\r\n    </form>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired\r\n}\r\nexport default AddCategory;\r\n","export const getGifs = async( category )=>{\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=5&api_key=7JH55PppxH9Gb1Hbaz8mJxBAxcwmedZi`;\r\n  const resp = await fetch(url);\r\n  const {data} = await resp.json();\r\n\r\n  const gifs = data.map( img => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images.downsized_medium.url\r\n    }\r\n  } );\r\n\r\n  // console.log(gifs);\r\n  return gifs;\r\n  // setImages( gifs );\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( {id,title,url} ) => {\r\n  \r\n  // console.log(id,title,url)\r\n  return (\r\n    <div className=\"card animate__animated animate__fadeIn\">\r\n      <img src={url} alt={title} />\r\n      <p>{title}</p>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n// import React, { useEffect, useState } from 'react'\r\n// import { getGifs } from '../helpers/getGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n  const {data:images, loading} = useFetchGifs( category );\r\n  \r\n  return (\r\n    <>\r\n      <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n      { loading && <p className=\"animate__animated animate__flash\">Loading</p> }\r\n      <div className=\"card-grid\">\r\n        {\r\n          images.map( img =>\r\n            <GifGridItem\r\n              key={img.id}\r\n              {...img}\r\n            />\r\n          )\r\n        }\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\"\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true\r\n  })\r\n  \r\n  useEffect( ()=>{\r\n    getGifs( category )\r\n    .then((imgs)=>{\r\n        setState({\r\n          data: imgs,\r\n          loading: false\r\n        })\r\n    })\r\n  },[category])\r\n\r\n  return state; // { data:[], loading:true };\r\n}","import React, { useState } from \"react\";\r\nimport AddCategory from \"./components/AddCategory\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n\r\nconst GifExpertApp = () => {\r\n  // const categories = [\"Naruto\", \"Pokemon\", \"Dragon Ball\"];\r\n\r\n  const [categories, setCategories] = useState([\"Dragon Ball\"]);\r\n  \r\n  return (\r\n    <>\r\n      <h2>GifExpertApp</h2>\r\n      <AddCategory setCategories={setCategories} />\r\n      <hr />\r\n\r\n      <ol>\r\n        {\r\n          categories.map( category =>(\r\n            <GifGrid\r\n              key={category}\r\n              category={category}\r\n            />\r\n          ))\r\n        }\r\n      </ol>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport GifExpertApp from \"./GifExpertApp\";\nimport \"./index.css\";\n\nReactDOM.render(<GifExpertApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}